# CLEANUPS

- name: Stop slapd
  service: name=slapd state=stopped enabled=false
  when: cleanup is defined
  ignore_errors: yes
  
- name: Uninstall slapd
  apt: name=slapd state=absent purge=yes
  when: cleanup is defined

- name: Remove /var/lib/ldap
  file: path=/var/lib/ldap state=absent
  when: cleanup is defined

- name: Remove certs
  file: path="{{ cert_path }}" state=absent
  when: cleanup is defined

- name: Uninstalled
  #fail: msg="Succesfully purged"
  meta: end_play
  when: cleanup is defined

  # END CLEANUPS

- name: Check debconf for slapd entries
  shell: (debconf-get-selections | grep -q -s slapd); echo $?
  register: debconf
  ignore_errors: yes

- name: Set debconf slapd password1
  debconf: name=slapd question="slapd/password1" value="{{ ldap_pw }}" vtype="password"
  when: debconf.stdout == "1"
    
- name: Set debconf slapd password2
  debconf: name=slapd question="slapd/password2" value="{{ ldap_pw }}" vtype="password"
  when: debconf.stdout == "1"

- name: Set debconf slapd domain
  debconf: name=slapd question="slapd/domain" value="{{ domain }}" vtype="string"
  when: debconf.stdout == "1"
  
- name: Install slapd
  apt: name=slapd state=present

- name: Install ldap-utils
  apt: name=ldap-utils state=present

- name: Render template directory-config_nocert.ldif
  template: 
    src: roles/slapd/templates/directory-config_nocert.ldif
    dest: /tmp/directory-config_nocert.ldif

- name: Apply Directory config ldif
  command: "ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/directory-config_nocert.ldif"

- name: Clean temporary config ldif
  file:
    state: absent
    path: "tmp/directory-config*."

- name: Search Directory for memberof overlay
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b cn=config  olcOverlay=memberof"
  register: memberof_overlay

- name: Render template memberof-overlay.ldif
  template: 
    src: roles/slapd/files/memberof-overlay.ldif
    dest: /tmp/memberof-overlay.ldif

# in caso di ldap_modify: No such object (32): modificare il valore hdb/mdb/storage di slapd
- name: Add memberOf overlay to openldap
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/memberof-overlay.ldif"
  when: memberof_overlay.stdout == ""

- name: Clean temporary memberof-overlay
  file:
    state: absent
    path: "tmp/memberof-overlay.ldif"

- name: Search Directory for eduperson schema
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b cn=schema,cn=config  cn=*eduperson dn"
  register: eduperson_schema

- name: Render template eduperson-201602 schema ldif
  copy: 
    src: roles/slapd/files/eduperson-201602.ldif
    dest: /tmp/eduperson-201602.ldif

- name: Add eduperson-201602 schema ldif
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/eduperson-201602.ldif"
  when: eduperson_schema.stdout == ""

- name: Clean temporary eduperson-201602 schema ldif
  file:
    state: absent
    path: "/tmp/eduperson-201602.ldif"

- name: Search Directory for users
  shell: "ldapsearch -QLLLY EXTERNAL -H ldapi:/// -b {{ ldap_basedc }} objectClass=inetOrgPerson dn"
  register: users_in_people_ou

- name: Render template directory-content.ldif
  template: 
    src: roles/slapd/templates/directory-content.ldif
    dest: /tmp/directory-content.ldif

- name: Add Directory content ldif
  command: "ldapadd -Y EXTERNAL -H ldapi:/// -f /tmp/directory-content.ldif"
  when: users_in_people_ou.stdout == ""
  
- name: Clean temporary content ldif
  file:
    state: absent
    path: "/tmp/directory-content.ldif"

- name: Restart slapd
  service: name=slapd state=restarted enabled=yes

- name: "Ensures {{ cert_path }} dir exists"
  file: path="{{ cert_path }}" state=directory

- name: Copy certs
  copy: 
    src: "{{ item }}"
    dest: "{{ cert_path }}/"
    owner: openldap
    mode: 640
  with_fileglob:
    - roles/slapd/files/certs/*

- name: Fix certs permissions
  file: path="{{ cert_path }}" owner=openldap group=root mode=0740 state=directory recurse=yes
    
- name: Render template directory-config-tls.ldif
  template: 
    src: roles/slapd/templates/directory-config-tls.ldif
    dest: /tmp/directory-config-tls.ldif

- name: Apply Directory config TLS
  command: "ldapmodify -Y EXTERNAL -H ldapi:/// -f /tmp/directory-config-tls.ldif"

- replace:
    path: /etc/default/slapd
    regexp: 'SLAPD_SERVICES="ldap:/// ldapi:///"'
    replace: 'SLAPD_SERVICES="ldap://127.0.0.1:389/ ldaps:/// ldapi:///"'
    backup: yes

- name: Restart slapd
  service: name=slapd state=restarted enabled=yes
