# unit tests

# remove definitions (not configuration) and
# restore backup (data definitions, users, uo and groups)
- set_fact:
    backup_folder: "{{ backup_folder }}/tests"
- debug: msg="Backup folder used to dumps everything from this test is '{{ backup_folder }}'"

- name: "Create {{ tmp_dir }}"
  file: path={{ backup_folder }} state=directory

- name: "Dump configuration and entries"
  include_role:
    name: slapd_backup

- set_fact:
    restore_ldif_path: "{{ backup_folder }}"
- debug: msg="Backup folder used to restore all is '{{restore_ldif_path }}'"

- name: "Destroy configuration and entries and restore all"
  include_role:
    name: slapd_restore_backup
  
# monitor
- name: "[Must-Do] Search as Monitor user"
  shell: "ldapsearch -x -D cn=monitor,ou=system,{{ ldap_basedc }} -w {{ ldap_monitor_pw }} -b cn=Uptime,cn=Time,cn=Monitor -s base '(objectClass=*)' '*' '+'"
  register: monitor_test
- debug: msg="{{ monitor_test.stdout | to_nice_yaml }}"

# add 2 user in uo=people

# user try to read his data
- name: "[Must-Do] Log as user and fetch his own"
  shell: "ldapsearch -x -D uid=mario,ou=people,{{ ldap_basedc }} -w cimpa12 -b 'uid=mario,ou=people,dc=testunical,dc=it'"
  #ignore_errors: true
  register: user_bind
- debug: msg="{{ user_bind.stdout | to_nice_yaml }}"

# a user tryes to modify his email and its password

# a user tryes to modify another readonly value (codice fiscale or other as matricola)

# people authentication and ACL

- name: "[Must-Fail] Log as user and fetch another user's profile"
  shell: "ldapsearch -x -D uid=mario,ou=people,{{ ldap_basedc }} -w cimpa12 -b 'uid=gino,ou=people,{{ ldap_basedc }}'"
  ignore_errors: true
  register: user_bind
- debug: msg="{{ user_bind.stdout | to_nice_yaml }}"

# add user with a collision with unique value (example: mail)

# add ppolicy overlay unit test (lock, unlock everything needed here)
